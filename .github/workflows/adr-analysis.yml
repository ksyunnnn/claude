name: ADR Analysis
description: Analyze PRs for technical decisions and automatically create ADR issues/drafts

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'package.json'              # 依存関係の変更
      - 'package-lock.json'         # 依存関係の変更
      - 'src/lib/**'                # アーキテクチャ変更
      - 'src/components/ui/**'      # UI戦略変更
      - 'supabase/**'               # データベース変更
      - 'src/app/**'                # アプリケーション構造変更
      - 'src/middleware.ts'         # ミドルウェア変更
      - 'next.config.ts'            # Next.js設定変更
      - 'tailwind.config.ts'        # スタイル戦略変更
      - 'tsconfig.json'             # TypeScript設定変更

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  analyze-technical-decisions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: pr-diff
        run: |
          # PR差分を取得
          git diff origin/${{ github.base_ref }}...${{ github.sha }} > pr_diff.txt
          
          # 変更されたファイルリストを取得
          git diff --name-only origin/${{ github.base_ref }}...${{ github.sha }} > changed_files.txt
          
          echo "changed-files<<EOF" >> $GITHUB_OUTPUT
          cat changed_files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Analyze changes
        id: analyze
        run: |
          # 技術的決定が必要かどうかを分析
          needs_adr=""
          decision_type=""
          priority=""
          
          if grep -q "package.json\|package-lock.json" changed_files.txt; then
            needs_adr="true"
            decision_type="新しい技術・ライブラリの採用"
            priority="Medium"
            echo "detected=dependency-change" >> $GITHUB_OUTPUT
          fi
          
          if grep -q "supabase/" changed_files.txt; then
            needs_adr="true"
            decision_type="データベース設計の変更"
            priority="High"
            echo "detected=database-change" >> $GITHUB_OUTPUT
          fi
          
          if grep -q "src/lib/" changed_files.txt; then
            needs_adr="true"
            decision_type="アーキテクチャの変更"
            priority="High"
            echo "detected=architecture-change" >> $GITHUB_OUTPUT
          fi
          
          if grep -q "src/components/ui/" changed_files.txt; then
            needs_adr="true"
            decision_type="UI/UX戦略の変更"
            priority="Medium"
            echo "detected=ui-strategy-change" >> $GITHUB_OUTPUT
          fi
          
          if grep -q "middleware.ts\|next.config.ts" changed_files.txt; then
            needs_adr="true"
            decision_type="アーキテクチャの変更"
            priority="High"
            echo "detected=config-change" >> $GITHUB_OUTPUT
          fi
          
          echo "needs-adr=$needs_adr" >> $GITHUB_OUTPUT
          echo "decision-type=$decision_type" >> $GITHUB_OUTPUT
          echo "priority=$priority" >> $GITHUB_OUTPUT

      - name: Extract key changes
        id: extract-changes
        if: steps.analyze.outputs.needs-adr == 'true'
        run: |
          # package.json の変更を抽出
          if grep -q "package.json" changed_files.txt; then
            echo "package-changes<<EOF" >> $GITHUB_OUTPUT
            git diff origin/${{ github.base_ref }}...${{ github.sha }} package.json | grep -E "^\+.*\".*\":" | head -10 >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
          
          # ファイル追加の検出
          echo "new-files<<EOF" >> $GITHUB_OUTPUT
          git diff --name-status origin/${{ github.base_ref }}...${{ github.sha }} | grep "^A" | head -10 >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create ADR issue
        if: steps.analyze.outputs.needs-adr == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const detectedType = '${{ steps.analyze.outputs.detected }}';
            const decisionType = '${{ steps.analyze.outputs.decision-type }}';
            const priority = '${{ steps.analyze.outputs.priority }}';
            const changedFiles = `${{ steps.pr-diff.outputs.changed-files }}`;
            const packageChanges = `${{ steps.extract-changes.outputs.package-changes }}` || '変更なし';
            const newFiles = `${{ steps.extract-changes.outputs.new-files }}` || '新規ファイルなし';

            // ADR Issue の作成
            const issueBody = `
            ## 🤖 自動検出された技術的決定

            **PR**: #${context.issue.number} - ${pr.title}
            **検出タイプ**: ${detectedType}
            **決定種類**: ${decisionType}
            **優先度**: ${priority}

            ## 📁 変更されたファイル
            \`\`\`
            ${changedFiles}
            \`\`\`

            ## 📦 パッケージ変更
            \`\`\`diff
            ${packageChanges}
            \`\`\`

            ## 🆕 新規ファイル
            \`\`\`
            ${newFiles}
            \`\`\`

            ## 📝 次のステップ
            1. この技術的決定がADR作成に値するかレビュー
            2. 必要に応じてADRドラフトを作成
            3. 関連する既存ADRの更新も検討

            ## 🔗 関連情報
            - **PR**: #${context.issue.number}
            - **作成者**: @${pr.user.login}
            - **ブランチ**: ${pr.head.ref}

            ---
            *この Issue は自動的に作成されました。不要な場合は閉じてください。*
            `;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[ADR] ${decisionType}: ${pr.title}`,
              body: issueBody,
              labels: ['needs-adr', 'technical-decision', 'auto-created', `priority-${priority.toLowerCase()}`]
            });

      - name: Comment on PR
        if: steps.analyze.outputs.needs-adr == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const decisionType = '${{ steps.analyze.outputs.decision-type }}';
            const priority = '${{ steps.analyze.outputs.priority }}';
            
            const comment = `
            ## 🤖 技術的決定を検出しました

            この PR には **${decisionType}** (優先度: **${priority}**) が含まれている可能性があります。

            ### 📋 次のアクション
            - [ ] 技術的決定の妥当性を確認
            - [ ] 必要に応じて ADR の作成を検討
            - [ ] 既存 ADR との整合性を確認

            関連する Issue が自動作成されました。詳細はそちらをご確認ください。

            ### 📚 参考
            - [ADR とは](docs/adr/README.md)
            - [技術決定テンプレート](.github/ISSUE_TEMPLATE/technical-decision.yml)

            ---
            *このコメントは自動的に作成されました*
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });